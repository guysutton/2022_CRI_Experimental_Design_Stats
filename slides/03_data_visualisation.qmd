---
title: "Session #3: Data Visualisation"
author: "Guy F. Sutton"
institute: "Centre for Biological Control<br>Rhodes University, South Africa<Br>Email: g.sutton@ru.ac.za"
format: 
  revealjs:
    # incremental: true
    logo: images/cbc_logo_full.jpg
    # footer: "`emitanaka.org/slides/toronto2022`"
    slide-number: true
    chalkboard: 
      boardmarker-width: 5
    # css: [assets/syntax-highlight.css, assets/custom.css, assets/pacman.css]
    # multiplex: true
    # controls: true
    # theme: [simple, assets/monash.scss]
    # header-includes: |
    #   <link rel="stylesheet" href="/assets/fontawesome-free-6.1.1-web/css/font-awesome.min.css">
    #   <script defer src="/assets/fontawesome-free-6.1.1-web/js/all.min.js"></script>
editor: source
---

## Data Visualisation

::: {.incremental}
- A picture paints a thousands words, right? 

- A critical component of any good data analysis is [exploratory data analysis [EDA]]{style="color:#800000"}
  + [EDA]{style="color:#800000"} refers to an initial investigation of the data to discover patterns, identify errors and anomalies, understand the data properties, check assumptions, and derive ideas about 
  what our statistical analyses are going to say... 
  
- To perform [EDA]{style="color:#800000"}, we need to make plots of our data 
:::

---

## Packages and data

Let's load the `tidyverse` and `palmerpenguins` packages again. 

```{r}
#| echo: false
#| output: false

# Use package manager to check, install and load required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
  # List the packages you need below
  tidyverse,
  palmerpenguins
)
```

```{r}
#| echo: false
#| eval: true

# Change ggplot theme
theme_set(
  theme_classic() +
    theme(
      panel.border = element_rect(colour = "black",
                                  fill = NA),
      axis.text = element_text(colour = "black"),
      axis.title.x = element_text(margin = unit(c(2, 0, 0, 0),
                                                "mm")),
      axis.title.y = element_text(margin = unit(c(0, 4, 0, 0),
                                                "mm")),
      legend.position = "none"
    )
)
```

```{r}
#| echo: true
#| eval: true

# Remove the rows withing missing (NA) data 
penguins <- penguins %>%
  tidyr::drop_na()
head(penguins)
```

---

## Histogram

Let's look at the distribution of body mass measurements across all three penguin species. 

. . . 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 4


ggplot(data = penguins,
       aes(x = body_mass_g)) +
  geom_histogram()
```

---

## Plot components 

::: {.incremental}
- We should back up and break that plot down into its component parts. 
  + This will demonstrate the modular nature of the **ggplot2** code.
  + **ggplot2** works by adding layers of different components to make a figure 
  + Makes more sense with an example 
:::

---

## Adding layers - add base layer 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 4
#| code-line-numbers: "1"

ggplot(data = penguins)
```

---

## Adding layers - add axes

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 4
#| code-line-numbers: "2"

ggplot(data = penguins,
       aes(x = body_mass_g))
```

---

## Adding layers - choose the plot type 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 4
#| code-line-numbers: "3"

ggplot(data = penguins,
       aes(x = body_mass_g)) +
  geom_histogram()
```

---

## Scatterplot 

::: {.incremental}
- What if we want to plot two variables at once? 
  + For example, a scatterplot looking at the correlation between `body_mass_g` and `flipper_length_mm`. 
:::

. . . 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "1"

ggplot(data = penguins) 
```

---

## Scatterplot 

- What if we want to plot two variables at once? 
  + For example, a scatterplot looking at the correlation between `body_mass_g` and `flipper_length_mm`. 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "2-3"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm)) 
```

---

## Scatterplot 

- What if we want to plot two variables at once? 
  + For example, a scatterplot looking at the correlation between `body_mass_g` and `flipper_length_mm`. 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "4"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm)) +
  geom_point()
```

---

### Add a plot title 


```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "5"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm)) +
  geom_point() +
  labs(title = "Do larger penguins have longer flippers?")
```

---

### Change x and y axis labels  

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "6-7"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm)) +
  geom_point() +
  labs(title = "Do larger penguins have longer flippers?",
       x = "Body mass (g)",
       y = "Flipper length (mm)")
```

---

### Color points by penguin `species` 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "4"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm,
           colour = species)) +
  geom_point() +
  labs(title = "Do larger penguins have longer flippers?",
       x = "Body mass (g)",
       y = "Flipper length (mm)")
```

---

### Different shapes for penguin `species` 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "4"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm,
           shape = species)) +
  geom_point() +
  labs(title = "Do larger penguins have longer flippers?",
       x = "Body mass (g)",
       y = "Flipper length (mm)")
```

---

### Add a legend  

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "9"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm,
           shape = species)) +
  geom_point() +
  labs(title = "Do larger penguins have longer flippers?",
       x = "Body mass (g)",
       y = "Flipper length (mm)") +
  theme(legend.position = "right")
```

---

### Change legend title 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "9"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm,
           shape = species)) +
  geom_point() +
  labs(title = "Do larger penguins have longer flippers?",
       x = "Body mass (g)",
       y = "Flipper length (mm)",
       shape = "Penguin species") +
  theme(legend.position = "right")
```

---

### Facets (sub-plots)

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "6"

ggplot(data = penguins,
       aes(x = body_mass_g,
           y = flipper_length_mm,
           shape = species)) +
  geom_point() +
  facet_wrap(~ species, nrow = 1) + 
  labs(title = "Do larger penguins have longer flippers?",
       x = "Body mass (g)",
       y = "Flipper length (mm)",
       shape = "Penguin species") +
  theme(legend.position = "right")
```

---

## Barplot 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "4"

ggplot(data = penguins,
       aes(x = species,
           y = bill_length_mm)) +
  geom_col() +
  labs(title = "Does bill length vary between species?",
       x = "Penguin species",
       y = "Bill length (mm)",
       shape = "Penguin species") +
  theme(legend.position = "right")
```

---

## Barplot (adding error bars)

- Have to manually calculate and store standard deviation of `bill_length_mm` per `penguin` species 

```{r}
#| echo: true
#| eval: true

penguins_errors <- penguins %>%
  dplyr::group_by(species) %>%
  dplyr::summarise(
    mean_length = mean(bill_length_mm),
    sd_length = sd(bill_length_mm)
  )
penguins_errors
```

---

## Add error bars to plot 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "1,3,5-6"

ggplot(data = penguins_errors,
       aes(x = species,
           y = mean_length)) +
  geom_col() +
  geom_errorbar(aes(ymin = mean_length - sd_length,
                    ymax = mean_length + sd_length)) + 
  labs(title = "Does bill length vary between species?",
       x = "Penguin species",
       y = "Bill length (mm)",
       shape = "Penguin species") +
  theme(legend.position = "right")
```

---

## Change width of error bars 

```{r}
#| echo: true
#| eval: true
#| fig-width: 20
#| code-line-numbers: "7"

ggplot(data = penguins_errors,
       aes(x = species,
           y = mean_length)) +
  geom_col() +
  geom_errorbar(aes(ymin = mean_length - sd_length,
                    ymax = mean_length + sd_length),
                width = 0.2) + 
  labs(title = "Does bill length vary between species?",
       x = "Penguin species",
       y = "Bill length (mm)",
       shape = "Penguin species") +
  theme(legend.position = "right")
```

---

## Boxplots 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "4"

ggplot(data = penguins,
       aes(x = species,
           y = bill_length_mm)) +
  geom_boxplot() +
  labs(title = "Does bill length vary between species?",
       x = "Penguin species",
       y = "Bill length (mm)",
       shape = "Penguin species") +
  theme(legend.position = "right")
```

---

### Different colour for boxes for `species`

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "4"

ggplot(data = penguins,
       aes(x = species,
           y = bill_length_mm,
           fill = species)) +
  geom_boxplot() +
  labs(title = "Does bill length vary between species?",
       x = "Penguin species",
       y = "Bill length (mm)",
       shape = "Penguin species") +
  theme(legend.position = "right")
```

---

### Choose your own colours 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "6"

ggplot(data = penguins,
       aes(x = species,
           y = bill_length_mm,
           fill = species)) +
  geom_boxplot() +
  scale_fill_manual(values = c("blue", "red", "yellow")) + 
  labs(title = "Does bill length vary between species?",
       x = "Penguin species",
       y = "Bill length (mm)",
       shape = "Penguin species") +
  theme(legend.position = "right")
```

---

### Grouped variables 

```{r}
#| echo: true
#| eval: true
#| fig-width: 9
#| fig-height: 3
#| code-line-numbers: "2,4,5"

ggplot(data = penguins,
       aes(x = species,
           y = bill_length_mm,
           fill = island)) +
  geom_boxplot(position = "dodge2") +
  labs(title = "Does bill length vary between species and islands?",
       x = "Penguin species",
       y = "Bill length (mm)",
       fill = "Island") +
  theme(legend.position = "right")
```

---

## Exercise #1 - Make this graph

::: {.panel-tabset}

### Graph
 
```{r}
#| echo: false
#| eval: true
#| fig-width: 9
#| fig-height: 5

ggplot(data = penguins,
       aes(x = flipper_length_mm,
           fill = species)) +
  geom_histogram() +
  labs(title = "Does flipper length differ between penguin species?",
       x = "Flipper length (mm)",
       fill = "Penguin species") +
  theme(legend.position = "right")
```

### Code (help)

```{r}
#| echo: true
#| eval: false

ggplot(data = penguins,
       aes(x = flipper_length_mm,
           fill = species)) +
  geom_histogram() +
  labs(title = "Does flipper length differ between penguin species?",
       x = "Flipper length (mm)",
       fill = "Penguin species") +
  theme(legend.position = "right")
```

:::

---

## Exercise #2 - Make this graph

::: {.panel-tabset}

### Graph
 
```{r}
#| echo: false
#| eval: true
#| fig-width: 9
#| fig-height: 5

ggplot(data = penguins,
       aes(x = flipper_length_mm,
           fill = island)) +
  geom_histogram() +
  labs(title = "Does flipper length differ between penguin species and islands?",
       x = "Flipper length (mm)",
       fill = "Island") +
  facet_wrap(~ species, nrow = 3) + 
  theme(legend.position = "right")
```

### Code (help)

```{r}
#| echo: true
#| eval: false

ggplot(data = penguins,
       aes(x = flipper_length_mm,
           fill = island)) +
  geom_histogram() +
  labs(title = "Does flipper length differ between penguin species and islands?",
       x = "Flipper length (mm)",
       fill = "Island") +
  facet_wrap(~ species, nrow = 3) + 
  theme(legend.position = "right")
```

:::



